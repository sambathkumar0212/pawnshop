# Generated by Django 5.2.1 on 2025-06-01 11:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_initial'),
        ('biometrics', '0001_initial'),
        ('branches', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='faceauthlog',
            options={'ordering': ['-timestamp'], 'verbose_name': 'face authentication log', 'verbose_name_plural': 'face authentication logs'},
        ),
        migrations.RemoveField(
            model_name='biometricsetting',
            name='face_recognition_threshold',
        ),
        migrations.RemoveField(
            model_name='faceauthlog',
            name='confidence_score',
        ),
        migrations.RemoveField(
            model_name='faceauthlog',
            name='status',
        ),
        migrations.AddField(
            model_name='biometricsetting',
            name='allow_customer_enrollment',
            field=models.BooleanField(default=True, help_text='Allow customers to enroll in face recognition'),
        ),
        migrations.AddField(
            model_name='biometricsetting',
            name='lockout_duration',
            field=models.DurationField(default='00:30:00', help_text='Duration of lockout after max attempts'),
        ),
        migrations.AddField(
            model_name='biometricsetting',
            name='max_attempts',
            field=models.PositiveIntegerField(default=3, help_text='Maximum failed attempts before lockout'),
        ),
        migrations.AddField(
            model_name='biometricsetting',
            name='min_confidence',
            field=models.FloatField(default=0.6, help_text='Minimum confidence score required for face recognition'),
        ),
        migrations.AddField(
            model_name='biometricsetting',
            name='require_liveness',
            field=models.BooleanField(default=True, help_text='Whether to require liveness detection'),
        ),
        migrations.AddField(
            model_name='faceauthlog',
            name='confidence',
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name='faceauthlog',
            name='success',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='biometricsetting',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biometric_settings', to='branches.branch'),
        ),
        migrations.AlterField(
            model_name='biometricsetting',
            name='face_recognition_enabled',
            field=models.BooleanField(default=True, help_text='Enable face recognition authentication'),
        ),
        migrations.AlterField(
            model_name='biometricsetting',
            name='face_recognition_required_for_customers',
            field=models.BooleanField(default=False, help_text='Require customers to use face recognition'),
        ),
        migrations.AlterField(
            model_name='biometricsetting',
            name='face_recognition_required_for_staff',
            field=models.BooleanField(default=False, help_text='Require staff to use face recognition'),
        ),
        migrations.AlterField(
            model_name='biometricsetting',
            name='fingerprint_enabled',
            field=models.BooleanField(default=False, help_text='Enable fingerprint authentication'),
        ),
        migrations.AlterField(
            model_name='biometricsetting',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_biometric_settings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='customerfaceenrollment',
            name='customer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='face_enrollment', to='accounts.customer'),
        ),
        migrations.AlterField(
            model_name='faceauthlog',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='face_auth_logs', to='accounts.customer'),
        ),
        migrations.AlterField(
            model_name='faceauthlog',
            name='device_info',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='faceauthlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='face_auth_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='faceenrollment',
            name='face_image',
            field=models.ImageField(blank=True, null=True, upload_to='faces/'),
        ),
    ]
